@model QLSieuThiWeb.Models.TaoHoaDon
@{
    ViewData["Title"] = "Tạo hóa đơn mới";
}

<div class="container-fluid mt-4">
    <h2 class="text-center mb-4">Tạo Hóa Đơn Mới</h2>

    <div class="card">
        <div class="card-body">
            <form id="formTaoHoaDon">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Số điện thoại khách hàng</label>
                        <input type="text" class="form-control" id="sdt" maxlength="10" oninput="this.value = this.value.replace(/[^0-9]/g, '');">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Trạng thái</label>
                        <select class="form-select" id="trangThai">
                            <option value="Đã giao">Lấy luôn</option>
                            <option value="Chưa giao">Chưa lấy hàng</option>

                        </select>
                    </div>
                </div>

                <div class="mb-3">
                    <h5>Chi tiết đơn hàng</h5>
                    <table class="table table-bordered" id="tableSanPham">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Đơn giá</th>
                                <th>Thành tiền</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <button type="button" class="btn btn-info" onclick="themSanPham()">
                        <i class="fas fa-plus"></i> Thêm sản phẩm
                    </button>
                </div>

                <div class="row">
                    <div class="col-12 text-end">
                        <h5>Tổng tiền: <span id="tongTien">0 VNĐ</span></h5>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Thanh Toán
                        </button>
                        <a href="/" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Hủy
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<template id="templateSanPham">
    <tr>
        <td>
            <select class="form-select sanpham-select" required onchange="capNhatGia(this)">
                <option value="">Chọn sản phẩm</option>
                @foreach (var sp in Model.DanhSachSanPham)
                {
                    <option value="@sp.MaSP" data-gia="@sp.Gia" data-tonkho="@sp.SoLuong">
                        @sp.TenSP
                    </option>
                }
            </select>
        </td>
        <td>
            <input type="number" class="form-control soluong-input" min="1" value="1" required onchange="tinhThanhTien(this)">
        </td>
        <td>
            <input type="text" class="form-control dongia-input" readonly>
        </td>
        <td>
            <input type="text" class="form-control thanhtien-input" readonly>
        </td>
        <td>
            <button type="button" class="btn btn-danger btn-sm" onclick="xoaSanPham(this)">
                <i class="fas fa-trash"></i>
            </button>
        </td>
    </tr>
</template>

@section Scripts {
    <script>
        let selectedProducts = new Set();

        function themSanPham() {
            const template = document.getElementById('templateSanPham');
            const newRow = template.content.cloneNode(true);
            document.querySelector('#tableSanPham tbody').appendChild(newRow);
            capNhatDanhSachSanPham();
        }

        function xoaSanPham(button) {
            const row = button.closest('tr');
            const select = row.querySelector('.sanpham-select');
            if (select && select.value) {
                selectedProducts.delete(select.value);
            }
            row.remove();
            capNhatDanhSachSanPham();
            tinhTongTien();
        }

        function capNhatGia(select) {
            const row = select.closest('tr');
            const option = select.options[select.selectedIndex];
            const gia = option.dataset.gia;
            row.querySelector('.dongia-input').value = formatMoney(gia);
            tinhThanhTien(row.querySelector('.soluong-input'));

            // Thêm mã sản phẩm vào tập các sản phẩm đã chọn
            const maSP = select.value;
            selectedProducts.add(maSP);
            capNhatDanhSachSanPham();
        }

        function capNhatDanhSachSanPham() {
            document.querySelectorAll('.sanpham-select').forEach(select => {
                const currentValue = select.value;
                select.querySelectorAll('option').forEach(option => {
                    const maSP = option.value;
                    if (selectedProducts.has(maSP) && maSP !== currentValue) {
                        option.disabled = true;
                    } else {
                        option.disabled = false;
                    }
                });
            });
        }

        function tinhThanhTien(input) {
            const row = input.closest('tr');
            const soLuong = parseInt(input.value);
            const select = row.querySelector('.sanpham-select');
            const tonKho = parseInt(select.options[select.selectedIndex].dataset.tonkho);
            const gia = parseFloat(select.options[select.selectedIndex].dataset.gia);

            if (soLuong > tonKho) {
                alert('Số lượng nhập vượt quá tồn kho!');
                input.value = tonKho;
            }

            row.querySelector('.thanhtien-input').value = formatMoney(input.value * gia);
            tinhTongTien();
        }

        function tinhTongTien() {
            let tong = 0;
            document.querySelectorAll('.thanhtien-input').forEach(input => {
                const thanhTien = parseFloat(input.value.replace(/[^\d]/g, ''));
                if (!isNaN(thanhTien)) {
                    tong += thanhTien;
                }
            });
            document.getElementById('tongTien').textContent = formatMoney(tong);
        }

        function formatMoney(amount) {
            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
        }

        document.getElementById('formTaoHoaDon').onsubmit = function(e) {
            e.preventDefault();
            const chiTietHoaDon = [];
            document.querySelectorAll('#tableSanPham tbody tr').forEach(row => {
                const select = row.querySelector('.sanpham-select');
                const soLuong = row.querySelector('.soluong-input').value;
                if (select.value && soLuong) {
                    chiTietHoaDon.push({
                        maSP: select.value,
                        slMua: parseInt(soLuong),
                        donGia: parseFloat(select.options[select.selectedIndex].dataset.gia),
                        tongTienSP: soLuong * parseFloat(select.options[select.selectedIndex].dataset.gia)
                    });
                }
            });
            if (chiTietHoaDon.length === 0) {
                alert('Vui lòng thêm ít nhất một sản phẩm!');
                return;
            }
            const data = {
                sdt: document.getElementById('sdt').value || null,
                trangThai: document.getElementById('trangThai').value,
                chiTietHoaDon: chiTietHoaDon
            };
            $.ajax({
                url: '/HoaDon/LuuHoaDon',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    alert(response.message);
                    if (response.success) {
                        location.reload(); // Reload lại trang sau khi lưu thành công
                    }
                },
                error: function() {
                    alert('Đã xảy ra lỗi!');
                }
            });
        };
        themSanPham();


    </script>

}
